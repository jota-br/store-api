type Query {
    orders: orderResponse
    getOrderById(id: ID!): orderResponse
}

type Mutation {
    addNewOrder(customer: Int!, productsInput: [OrderProductInput]!): orderResponse
    cancelOrderById(id: ID!): orderResponse
}

type orderResponse {
    success: Boolean!
    message: String!
    body: [Order!]!
}

type Order {
    id: ID!
    customer: Customer!
    products: [OrderProduct!]!
    totalOrderAmount: Float!
    orderDate: Int!
    delivered: Boolean
    deliveryDate: Int
    updatedAt: Int
    canceled: Boolean
}

type OrderProduct {
    product: Product!
    quantity: Int!
    unitPrice: Float!
    totalAmount: Float!
}

input OrderProductInput {
    productId: ID!
    quantity: Float!
}